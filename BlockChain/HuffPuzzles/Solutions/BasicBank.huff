/** 
 *  BASIC_BANK HUFF EXERCISE
 *  
 *  The task is to create a basic bank with huff
 * functionalities include
 *      - depositing tokens via similar to how solidity's `receive` function works
 *      - withdrawing tokens
 *      - keeping track of and viewing balance
 */

#define function balanceOf(address) payable returns(uint256)
#define function withdraw(uint256) payable returns()

#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr dup1
    __FUNC_SIG(balanceOf) eq give_balance jumpi
    __FUNC_SIG(withdraw) eq withraw_money jumpi

    caller sload callvalue add
    caller
    sstore
    stop


    give_balance:
    0x04 calldataload sload 0x00 mstore
    0x20 0x00 return

    withraw_money:
    0x04 calldataload // [val]
    caller sload // [money_in_wallet,val]
    lt fail jumpi // []
    0x04 calldataload caller sload // [money_in_wallet,val]
    sub // [money_left_after_withraw]
    caller sstore // money stored at that address now. 
    0x00
    0x00
    0x00
    0x00
    0x04 calldataload // [value,0,0,0,0]
    caller // [address,value,0,0,0,0]
    gas
    call
    stop


    fail:
    0x00 0x00 revert
}