
/** 
 *  MULTIPLY HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like multiplication etc
 *  
 *  The task is to write within the `MAIN` macro below, a function named `multiply` that takes in 2 uint256s, and returns their product. Be sure to revert on overflow
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function multiply(uint256, uint256) payable returns(uint256)

#define macro multiply_operation() = takes(0) returns(0) {
    0x04 calldataload
    0x24 calldataload
    mul

    0x00 mstore

    0x04 calldataload
    0x24 calldataload

    0x00 mload
    div eq safe jumpi
    revert

    safe:
}

#define macro MAIN() = takes(0) returns(0) {
    0x00
    calldataload
    0xe0
    shr

    __FUNC_SIG(multiply) eq perform_mul_op jumpi

    perform_mul_op:
    multiply_operation()

    0x20
    0x00
    return
}